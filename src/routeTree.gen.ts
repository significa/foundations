/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { Route as rootRouteImport } from './routes/__root'
import { Route as docsRouteRouteImport } from './routes/(docs)/route'
import { Route as IndexRouteImport } from './routes/index'
import { Route as docsSplatRouteImport } from './routes/(docs)/$'

const docsRouteRoute = docsRouteRouteImport.update({
  id: '/(docs)',
  getParentRoute: () => rootRouteImport,
} as any)
const IndexRoute = IndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRouteImport,
} as any)
const docsSplatRoute = docsSplatRouteImport.update({
  id: '/$',
  path: '/$',
  getParentRoute: () => docsRouteRoute,
} as any)

export interface FileRoutesByFullPath {
  '/': typeof docsRouteRouteWithChildren
  '/$': typeof docsSplatRoute
}
export interface FileRoutesByTo {
  '/': typeof docsRouteRouteWithChildren
  '/$': typeof docsSplatRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/': typeof IndexRoute
  '/(docs)': typeof docsRouteRouteWithChildren
  '/(docs)/$': typeof docsSplatRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths: '/' | '/$'
  fileRoutesByTo: FileRoutesByTo
  to: '/' | '/$'
  id: '__root__' | '/' | '/(docs)' | '/(docs)/$'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  docsRouteRoute: typeof docsRouteRouteWithChildren
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/(docs)': {
      id: '/(docs)'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof docsRouteRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/(docs)/$': {
      id: '/(docs)/$'
      path: '/$'
      fullPath: '/$'
      preLoaderRoute: typeof docsSplatRouteImport
      parentRoute: typeof docsRouteRoute
    }
  }
}

interface docsRouteRouteChildren {
  docsSplatRoute: typeof docsSplatRoute
}

const docsRouteRouteChildren: docsRouteRouteChildren = {
  docsSplatRoute: docsSplatRoute,
}

const docsRouteRouteWithChildren = docsRouteRoute._addFileChildren(
  docsRouteRouteChildren,
)

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  docsRouteRoute: docsRouteRouteWithChildren,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()
